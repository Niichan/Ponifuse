{"name":"Ponifuse","tagline":"Ponifies files at load and de-ponifies them at write time (fuse module)","body":"Ponifuse is an **experimental** project in applying the text-replacement rules of Ponify to file transparently as they are written and read.\r\n\r\n**THIS DOES *NOT* WORK YET**\r\n\r\n---\r\n\r\nStory time!  This is a modified version of the reddit post that started this all.\r\n\r\nSo, about a month or so ago, one of my floormates, Derp called me \"gay\" for liking and watching My Little Pony, right? He was met with the full force of Love and Tolerance. eg:\r\n\r\n>>him\r\n\r\n>\"Dude, it's a *[redacted]* girl's show, you are gay.\" &#3232;\\_&#3232;\r\n\r\n>>me \r\n\r\n>\"Have you seen it? You shouldn't judge something by first appearances.\"\r\nand he gave up from there (pro tip: love and tolerance beats all).\r\n\r\nSo, about a week ago *(from date of writing)*, I installed ponify on his browesr and completely hid it. Today he found out the magic. And I found out he thought the internet was broken, and he went over to my desktop and laptop to confirm this.  Oh, I should mention, I have ponify on both my boxes.  I verified to him that he was searching for \"The Filly With The Dragon Cutie Mark\", and not \"The Girl With the Dragon Tattoo\".  The look on his face as he had a lapse of sanity was *so* worth it.  \r\n\r\nMy next idea? Make Ponify modify files at load-time in the linux kernel (or possibly a FUSE module) to smartly ponify files at load-time by transparently mounting the ponifuse module at login (okay, this part is not my job, but it is an example case).\r\n\r\nThis is my implementation of that idea, in the form of a fuse module. \r\n\r\n---\r\n\r\nImplementation details:\r\n\r\nPonifuse pretends that the directory you have ponified is not changed at all, until you try to read from the files.  As the file is opened, Ponifuse ponifies the file in question by replacing words in the file as according to the substitutions I have hard-coded.  An example is that \"everyone\" becomes \"everypony\", and it also has the advantage of removing confusing and outdated words like *\"human\"* (whatever that means).\r\n\r\nThe full list of replacements is in `src/list.txt` if you want to see all of them.  Fair warning, the list was generated by python in the REPL, so it is not optimized for humans reading it.\r\n\r\n---\r\n\r\nSpecial thanks to stillunnamed on irc.ponychat.net for helping me get the basics of the replacement logic hammered down.  Also thanks to [Justin Workman](/http://github.com/xtagon) for talking me into this.\r\n\r\nThis project is only intended for fun, testing, and possibly being used in pranks against people you ~~hate~~ er... Love and Tolerate.\r\n\r\nOh, as of when I updated this part last, Derp has not gotten me back for the Ponify prank yet.  As he does not use Linux, I cannot test the effectiveness of this project on a ~~victim~~ voulnteer.   I will post details when he does get me back.  If I die, please order me a pizza. [](/ppfear \"I don't want to die though.\")\r\n\r\nMore to come.\r\n\r\n[](/rajlie \"I'm not a brony, no sir; I just like watching my little pony\")  \r\n[](/c06 \"Shaddup you, I... I... can watch what I want! You just shut up.\") \r\n[](/cheerilee \"well, okay... but only on weekends, and not like those other bronies, and no one has to know, and...\")  \r\n[](/rc18 \"Yes, I suppose I am a brony\")  \r\n[](/c24 \"Pooooooniess....\") \r\n\r\n[](/ppfear \"why do they call it a hack saw? It doesn’t hack; hacking is what I was doing with the knife. This is a saw. I don’t get it.\")","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}